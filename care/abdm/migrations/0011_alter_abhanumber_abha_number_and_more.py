# Generated by Django 4.2.2 on 2023-10-01 16:44

import uuid

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import care.abdm.models.consent
import care.utils.models.validators


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("abdm", "0010_healthfacility_registered"),
    ]

    operations = [
        migrations.AlterField(
            model_name="abhanumber",
            name="abha_number",
            field=models.TextField(blank=True, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="abhanumber",
            name="health_id",
            field=models.TextField(blank=True, null=True, unique=True),
        ),
        migrations.CreateModel(
            name="ConsentRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "created_date",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                (
                    "modified_date",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("deleted", models.BooleanField(db_index=True, default=False)),
                ("consent_id", models.UUIDField(blank=True, null=True, unique=True)),
                (
                    "care_contexts",
                    models.JSONField(
                        default=list,
                        validators=[
                            care.utils.models.validators.JSONFieldSchemaValidator(
                                {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "content": [
                                        {
                                            "additionalProperties": False,
                                            "properties": {
                                                "careContextReference": {
                                                    "type": "string"
                                                },
                                                "patientReference": {"type": "string"},
                                            },
                                            "required": [
                                                "patientReference",
                                                "careContextReference",
                                            ],
                                            "type": "object",
                                        }
                                    ],
                                    "type": "array",
                                }
                            )
                        ],
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("CAREMGT", "Care Management"),
                            ("BTG", "Break The Glass"),
                            ("PUBHLTH", "Public Health"),
                            ("HPAYMT", "Healthcare Payment"),
                            ("DSRCH", "Disease Specific Healthcare Research"),
                            ("PATRQT", "Self Requested"),
                        ],
                        default="CAREMGT",
                        max_length=20,
                    ),
                ),
                (
                    "hi_types",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("Prescription", "Prescription"),
                                ("DiagnosticReport", "Diagnostic Report"),
                                ("OPConsultation", "Op Consultation"),
                                ("DischargeSummary", "Discharge Summary"),
                                ("ImmunizationRecord", "Immunization Record"),
                                ("HealthDocumentRecord", "Record Artifact"),
                                ("WellnessRecord", "Wellness Record"),
                            ],
                            max_length=20,
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                ("hip", models.CharField(blank=True, max_length=50, null=True)),
                ("hiu", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "access_mode",
                    models.CharField(
                        choices=[
                            ("VIEW", "View"),
                            ("STORE", "Store"),
                            ("QUERY", "Query"),
                            ("STREAM", "Stream"),
                        ],
                        default="VIEW",
                        max_length=20,
                    ),
                ),
                (
                    "from_time",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_from_time,
                        null=True,
                    ),
                ),
                (
                    "to_time",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_to_time,
                        null=True,
                    ),
                ),
                (
                    "expiry",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_expiry,
                        null=True,
                    ),
                ),
                (
                    "frequency_unit",
                    models.CharField(
                        choices=[
                            ("HOUR", "Hour"),
                            ("DAY", "Day"),
                            ("WEEK", "Week"),
                            ("MONTH", "Month"),
                            ("YEAR", "Year"),
                        ],
                        default="HOUR",
                        max_length=20,
                    ),
                ),
                (
                    "frequency_value",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("frequency_repeats", models.PositiveSmallIntegerField(default=0)),
                (
                    "patient_abha",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="abdm.abhanumber",
                        to_field="health_id",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConsentArtefact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "created_date",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                (
                    "modified_date",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("deleted", models.BooleanField(db_index=True, default=False)),
                ("consent_id", models.UUIDField(blank=True, null=True, unique=True)),
                (
                    "care_contexts",
                    models.JSONField(
                        default=list,
                        validators=[
                            care.utils.models.validators.JSONFieldSchemaValidator(
                                {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "content": [
                                        {
                                            "additionalProperties": False,
                                            "properties": {
                                                "careContextReference": {
                                                    "type": "string"
                                                },
                                                "patientReference": {"type": "string"},
                                            },
                                            "required": [
                                                "patientReference",
                                                "careContextReference",
                                            ],
                                            "type": "object",
                                        }
                                    ],
                                    "type": "array",
                                }
                            )
                        ],
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("CAREMGT", "Care Management"),
                            ("BTG", "Break The Glass"),
                            ("PUBHLTH", "Public Health"),
                            ("HPAYMT", "Healthcare Payment"),
                            ("DSRCH", "Disease Specific Healthcare Research"),
                            ("PATRQT", "Self Requested"),
                        ],
                        default="CAREMGT",
                        max_length=20,
                    ),
                ),
                (
                    "hi_types",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("Prescription", "Prescription"),
                                ("DiagnosticReport", "Diagnostic Report"),
                                ("OPConsultation", "Op Consultation"),
                                ("DischargeSummary", "Discharge Summary"),
                                ("ImmunizationRecord", "Immunization Record"),
                                ("HealthDocumentRecord", "Record Artifact"),
                                ("WellnessRecord", "Wellness Record"),
                            ],
                            max_length=20,
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                ("hip", models.CharField(blank=True, max_length=50, null=True)),
                ("hiu", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "access_mode",
                    models.CharField(
                        choices=[
                            ("VIEW", "View"),
                            ("STORE", "Store"),
                            ("QUERY", "Query"),
                            ("STREAM", "Stream"),
                        ],
                        default="VIEW",
                        max_length=20,
                    ),
                ),
                (
                    "from_time",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_from_time,
                        null=True,
                    ),
                ),
                (
                    "to_time",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_to_time,
                        null=True,
                    ),
                ),
                (
                    "expiry",
                    models.DateTimeField(
                        blank=True,
                        default=care.abdm.models.consent.Consent.default_expiry,
                        null=True,
                    ),
                ),
                (
                    "frequency_unit",
                    models.CharField(
                        choices=[
                            ("HOUR", "Hour"),
                            ("DAY", "Day"),
                            ("WEEK", "Week"),
                            ("MONTH", "Month"),
                            ("YEAR", "Year"),
                        ],
                        default="HOUR",
                        max_length=20,
                    ),
                ),
                (
                    "frequency_value",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("frequency_repeats", models.PositiveSmallIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REQUESTED", "Requested"),
                            ("GRANTED", "Granted"),
                            ("DENIED", "Denied"),
                            ("EXPIRED", "Expired"),
                            ("REVOKED", "Revoked"),
                        ],
                        default="REQUESTED",
                        max_length=20,
                    ),
                ),
                ("cm", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "key_material_algorithm",
                    models.CharField(
                        blank=True, default="ECDH", max_length=20, null=True
                    ),
                ),
                (
                    "key_material_curve",
                    models.CharField(
                        blank=True, default="Curve25519", max_length=20, null=True
                    ),
                ),
                (
                    "key_material_public_key",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "key_material_private_key",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "key_material_nonce",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("signature", models.TextField(blank=True, null=True)),
                (
                    "consent_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="consent_artefacts",
                        to="abdm.consentrequest",
                        to_field="consent_id",
                    ),
                ),
                (
                    "patient_abha",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="abdm.abhanumber",
                        to_field="health_id",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
